syntax = "proto3";

package kubemail;

service KubeMail {

    rpc ListCaughtEmails(ListCaughtEmailsRequest) returns (ListCaughtEmailsResponse);
    rpc WatchCaughtEmails(WatchCaughtEmailsRequest) returns (stream Email);
    rpc GetCaughtEmail(GetCaughtEmailRequest) returns (Email);

    rpc GetSummary(GetSummaryRequest) returns (Summary);

}

message GetSummaryRequest {
    string namespace = 1;
    int64 from_timestamp = 2;
}

message Summary {
    message Item {
        int64 timestamp = 1;
        int32 message_count = 2;
    }

    repeated Item item = 1;
    map<string, int32> recipient = 2;
    map<string, int32> sender = 3;
}

message ListCaughtEmailsRequest {
    string namespace = 1;
    int32 limit = 2;
    int32 offset = 3;
}

message GetCaughtEmailRequest {
    string namespace = 1;
    string id = 2;
}

message WatchCaughtEmailsRequest {
    string namespace = 1;
    bool only_new = 2;
}

message ListCaughtEmailsResponse {
    int32 limit = 1;
    int32 offset = 2;
    int32 total_count = 3;

    repeated Email email = 4;
}

message Email {
    message Source {
        string pod_name = 1;
        string namespace = 2;
        map<string, string> label = 3;
    }

    message EmailEnvelope {
        string mail_from = 1;
        repeated string rcpt_to = 2;
    }

    message EmailMessage {
        message Content {
            string text = 1;
            string html = 2;
        }

        message Header {
            string name = 1;
            string value = 2;
        }

        string subject = 1;
        Content body = 2;

        repeated string to = 3;
        repeated string from = 4;
        repeated string cc = 5;
        repeated string bcc = 6;

        repeated Header header = 7;
    }

    string id = 5;
    Source source = 4;
    EmailEnvelope envelope = 1;
    int64 date = 2;

    EmailMessage message = 3;
}
